<views:View x:Class="Jarloo.Sojurn.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:views="clr-namespace:Jarloo.Sojurn.Views"
        xmlns:viewModels="clr-namespace:Jarloo.Sojurn.ViewModels"
        xmlns:behaviors="clr-namespace:Jarloo.Sojurn.Behaviors"
        xmlns:converters="clr-namespace:Jarloo.Sojurn.Converters"
        mc:Ignorable="d"
        GlowBrush="{StaticResource AccentColorBrush}"
        Height="775" Width="1564"
        Background="{StaticResource Background}" Foreground="{StaticResource Foreground}"
        d:DataContext="{d:DesignInstance {x:Type viewModels:MainViewModel}}"> 

    <Window.Resources>
        <converters:BoolToVisHiddenConverter x:Key="BoolToVisHiddenConverter"/>
        <converters:LastUpdatedConverter x:Key="LastUpdatedConverter"/>
        <converters:ShowOpacityConverter x:Key="ShowOpacityConverter"/>
        <converters:ShowUnwatchedConverter x:Key="ShowUnwatchedConverter"/>
        
        <Style TargetType="TextBlock" x:Key="StatusStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Ended">
                    <Setter Property="TextBlock.Foreground" Value="{StaticResource ShowEndedBrush}"/>
                </DataTrigger>
            </Style.Triggers>
            <Style.Setters>
                <Setter Property="Foreground" Value="{StaticResource StatusForegroundBrush}"/>
            </Style.Setters>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="268"/>
            <ColumnDefinition Width="255"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="55" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="0">
            <Button HorizontalAlignment="Left" Height="46" VerticalAlignment="Top" Width="46" Cursor="Hand" Margin="0,4,0,0" ToolTip="Add NewShow..." Command="{Binding AddShowCommand}">
                <Button.Template>
                    <ControlTemplate>
                        <Image Source="{StaticResource Add}" />
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button HorizontalAlignment="Left" Height="46" VerticalAlignment="Top" Width="46" Cursor="Hand" Margin="5,4,0,0" FontSize="32" ToolTip="Refresh All NewShows" Command="{Binding RefreshAllShowsCommand}">
                <Button.Template>
                    <ControlTemplate>
                        <Image Source="{StaticResource Refresh}" x:Name="imgRefresh"
                               RenderTransformOrigin=".5,.5">
                            <Image.RenderTransform>
                                <RotateTransform Angle="0" />
                            </Image.RenderTransform>
                        </Image>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="imgRefresh"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         From="0" To="360" Duration="0:0:1.0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
        
        <ListBox ItemsSource="{Binding Shows.View}" Background="{x:Null}"  Grid.Row="1" Grid.Column="0"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{StaticResource NoFocusListBoxStyle}" SelectedItem="{Binding SelectedShow}">

            <i:Interaction.Behaviors>
                <behaviors:ScrollIntoViewBehavior />
            </i:Interaction.Behaviors>
            
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel DockPanel.Dock="Left" Cursor="Hand" Margin="-4,5,0,10" Name="ItemPanel" Background="{StaticResource Background}">
                        <Grid>
                            <Image Source="{Binding ImageSource}" Width="150" Height="189" Stretch="Uniform"
                                        VerticalAlignment="Center" Opacity="{Binding UnwatchedCount, Converter={StaticResource ShowOpacityConverter}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction
                                        Command="{Binding DataContext.ShowEpisodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                        CommandParameter="{Binding .}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Image>
                            <Grid Visibility="{Binding UnwatchedCount, Converter={StaticResource ShowUnwatchedConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction
                                        Command="{Binding DataContext.ShowEpisodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                        CommandParameter="{Binding .}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Ellipse Fill="{StaticResource UnwatchedStickerBackgroundBrush}" Height="80" Width="80" Opacity="0.7" />
                                <TextBlock Text="{Binding UnwatchedCount}" FontSize="45" TextAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>

                            <controls:ProgressRing IsActive="{Binding IsLoading}" />
                        </Grid>
                        <TextBlock Text="{Binding Name}" FontSize="14" TextAlignment="Center" TextTrimming="CharacterEllipsis" Width="150" />
                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Status: " FontSize="12" Style="{StaticResource StatusStyle}"/>
                            <TextBlock Text="{Binding Status}" FontSize="12" Style="{StaticResource StatusStyle}"/>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Updated: " FontSize="9" Foreground="{StaticResource LastUpdatedForegroundBrush}"/>
                            <TextBlock Text="{Binding LastUpdated, Converter={StaticResource LastUpdatedConverter}}" FontSize="9" Foreground="{StaticResource LastUpdatedForegroundBrush}" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Name="controlPanel" Visibility="{Binding IsMouseOver, ElementName=ItemPanel, Converter={StaticResource BoolToVisHiddenConverter}}">
                            <Button Height="24" Width="24" Cursor="Hand"
                                        VerticalAlignment="Top" Margin="0,0,0,0" ToolTip="Refresh" Command="{Binding DataContext.RefreshShowCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image Source="{StaticResource Refresh}"
                                                   RenderTransformOrigin=".5,.5" x:Name="imgRefresh">
                                            <Image.RenderTransform>
                                                <RotateTransform Angle="0" />
                                            </Image.RenderTransform>
                                        </Image>

                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="ButtonBase.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="imgRefresh"
                                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                             From="0" To="360" Duration="0:0:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Height="24" Width="24" Cursor="Hand"
                                        VerticalAlignment="Top" ToolTip="Mark All Episodes as Watched" Command="{Binding DataContext.MarkAllEpisodesAsWatchedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image Source="{StaticResource Hide}" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                            <Button Height="24" Width="24" Cursor="Hand"
                                        VerticalAlignment="Top" ToolTip="Mark All Episodes as Unwatched" Command="{Binding DataContext.MarkAllEpisodesAsUnWatchedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image Source="{StaticResource Show}" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button Height="24" Width="24" Cursor="Hand"
                                        VerticalAlignment="Top" ToolTip="Delete Show" Command="{Binding DataContext.DeleteShowCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image Source="{StaticResource Close}" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel>
                        <i:Interaction.Behaviors>
                            <ei:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.5">
                                <ei:FluidMoveBehavior.EaseX>
                                    <CircleEase EasingMode="EaseOut" />
                                </ei:FluidMoveBehavior.EaseX>
                            </ei:FluidMoveBehavior>
                        </i:Interaction.Behaviors>
                    </WrapPanel>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>

        
        <!--TIMELINE-->
        <ListBox ItemsSource="{Binding TimeLine.View}" Grid.Column="2" Grid.Row="1" Margin="0,58,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel Margin="5,5,5,5">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name, StringFormat=\{0:ddd\}}" FontSize="40" />
                                                <TextBlock Text="{Binding Name, StringFormat=\{0:MMM dd\}}"
                                                           Margin="10,20,0,0" FontSize="14" />
                                            </StackPanel>
                                            <ItemsPresenter />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <StackPanel>
                                <i:Interaction.Behaviors>
                                    <ei:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.5">
                                        <ei:FluidMoveBehavior.EaseX>
                                            <CircleEase EasingMode="EaseOut" />
                                        </ei:FluidMoveBehavior.EaseX>
                                    </ei:FluidMoveBehavior>
                                </i:Interaction.Behaviors>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Show.AirTimeHour, StringFormat=\{0:00\}}" />
                        <TextBlock Text=":" />
                        <TextBlock Text="{Binding Show.AirTimeMinute, StringFormat=\{0:00\}}" />
                        <TextBlock Text="{Binding Show.Name}" Margin="20,0,0,0" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.Style>
                <Style TargetType="{x:Type ItemsControl}">

                    <Style.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid Margin="4,0,4,4">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
                                                    SnapsToDevicePixels="True" />
                                            <ContentPresenter Margin="8,5" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource TimeLineItemHoverBackgroundBrush}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.Resources>

                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListBox.Style>
        </ListBox>

        
        <!--BACKLOG-->
        <ListBox ItemsSource="{Binding Backlog.View}" Grid.Column="1" Grid.Row="1" Margin="0,58,1,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectedItem="{Binding SelectedBackLogItem, UpdateSourceTrigger=PropertyChanged }">
            <ListBox.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <StackPanel Margin="5,5,5,5">
                                            <TextBlock Text="{Binding Name}" FontSize="20" Margin="0,0,0,5" />
                                            <ItemsPresenter />
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                    <GroupStyle.Panel>
                        <ItemsPanelTemplate>
                            <StackPanel>
                                <i:Interaction.Behaviors>
                                    <ei:FluidMoveBehavior AppliesTo="Children" Duration="00:00:00.5">
                                        <ei:FluidMoveBehavior.EaseX>
                                            <CircleEase EasingMode="EaseOut" />
                                        </ei:FluidMoveBehavior.EaseX>
                                    </ei:FluidMoveBehavior>
                                </i:Interaction.Behaviors>
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </GroupStyle.Panel>
                </GroupStyle>
            </ListBox.GroupStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0">
                            <StackPanel Orientation="Horizontal">
                                <Button Height="24" Width="24" Cursor="Hand"
                                    VerticalAlignment="Top" Margin="0,0,10,0" ToolTip="Mark as read" Command="{Binding DataContext.ToggleViewedBackLogCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Image>
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Episode.HasBeenViewed}"
                                                                     Value="true">
                                                                <Setter Property="Source"
                                                                    Value="{StaticResource Hide}" />
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding Path=Episode.HasBeenViewed}"
                                                                     Value="false">
                                                                <Setter Property="Source" Value="{StaticResource Show}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <StackPanel Orientation="Horizontal" Cursor="Hand">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseUp">
                                            <i:InvokeCommandAction
                                                            Command="{Binding DataContext.ShowEpisodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                            CommandParameter="{Binding .Show}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBlock Text="S" FontSize="14" />
                                    <TextBlock Text="{Binding SeasonNumber, StringFormat=\{0:00\}}" FontSize="14" />
                                    <TextBlock Text="E" FontSize="14" />
                                    <TextBlock Text="{Binding EpisodeNumberThisSeason, StringFormat=\{0:00\}}" FontSize="14" />
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Cursor="Hand">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction
                                                            Command="{Binding DataContext.ShowEpisodesCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                            CommandParameter="{Binding .Show}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBlock Text="{Binding Path=Episode.Title}" FontSize="12" Margin="32,0,0,0" />
                                <TextBlock Text="{Binding Episode.AirDate, StringFormat=D}" FontSize="9" Margin="32,8,0,0" Opacity="0.8"/>
                            </StackPanel>
                        </StackPanel>

                        <Button Grid.Column="1" Cursor="Hand" Command="{Binding DataContext.ShowStreamProvidersCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding .}">
                            <Button.Template>
                                <ControlTemplate>
                                    <Image Source="{StaticResource Play}" Height="32" Width="32" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>

                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.Style>
                <Style TargetType="{x:Type ItemsControl}">
                    <Style.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="{StaticResource ListBoxItemBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid Margin="4,0,4,4">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"
                                                    SnapsToDevicePixels="True" />
                                            <ContentPresenter Margin="8,5" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" Value="{StaticResource BacklogItemHoverBackgroundBrush}" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Style.Resources>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </ListBox.Style>

        </ListBox>

        <TextBlock Grid.Column="1" Height="43" Margin="50,10,53,0" Grid.Row="1" TextWrapping="Wrap" Text="backlog"
                   VerticalAlignment="Top" FontSize="32" TextAlignment="Center" />
        <TextBlock Grid.Column="2" Height="43" Margin="49,10,49,0" Grid.Row="1" TextWrapping="Wrap" Text="timeline"
                   VerticalAlignment="Top" FontSize="32" TextAlignment="Center" />
        <TextBlock Grid.Row="0" Grid.Column="2" Margin="0,10,10,0" VerticalAlignment="Top" TextAlignment="Right" HorizontalAlignment="Right" Width="199" Height="16" Text="{Binding Version}"/>

        
        <Popup Width="150" StaysOpen="False" Name="StreamProviderPopup">
            <Border BorderThickness="1" BorderBrush="{StaticResource AccentColorBrush}" Background="{StaticResource Background}">
                <ListBox ItemsSource="{Binding StreamProviders}" Margin="20,20,20,20" Background="{x:Null}" BorderThickness="0">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" Foreground="{StaticResource Foreground}">
                                 <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <i:InvokeCommandAction
                                                            Command="{Binding DataContext.CallStreamProviderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:View}}}" CommandParameter="{Binding .}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.Style>
                        <Style TargetType="{x:Type ItemsControl}">
                            <Style.Resources>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Style.Resources>
                        </Style>
                    </ListBox.Style>
                </ListBox>
            </Border>
        </Popup>

    </Grid>
</views:View>
